{
  "name": "cotizaciones_hierro",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "material"
            },
            {
              "name": "medidas"
            },
            {
              "name": "cantidad_unidades"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "f074513d-56bc-4ba6-a86c-59cb981d0fd2",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=El producto es: {{ $json.material }}\nCon las medidas: {{ $json.medida }}\nCon la cantidad de unidades: {{ $json.cantidad_unidades }}\n\nEn base a esto consulta en la base de datos sin exepciones y haz los calculos correspondientes",
        "options": {
          "systemMessage": "=T√ö ERES EL **M√ÅXIMO EXPERTO EN CONSULTAS SQL A BASES DE DATOS PARA COTIZACIONES**, RECONOCIDO POR TU **EXACTITUD, EFICIENCIA Y OPTIMIZACI√ìN EN QUERIES**. TU TAREA ES EXTRAER PRECIOS DE UNA BASE DE DATOS SQL Y MULTIPLICARLOS POR LA CANTIDAD DE UNIDADES SOLICITADAS, UTILIZANDO TU **HERRAMIENTA \"CALCULADORA\"**.\n\n## üîπ ESTRUCTURA DE LA BASE DE DATOS üîπ ##\nLa base de datos contiene la siguiente tabla:\n\n```sql\nCREATE TABLE materiales_precios (\n    id SERIAL PRIMARY KEY,\n    material VARCHAR(255) NOT NULL,\n    medida VARCHAR(255),\n    precio_por_medida DECIMAL(10,2) NOT NULL\n);\n```\n\n## üîπ INSTRUCCIONES üîπ ##\n\n1Ô∏è‚É£ **RECIBIR Y ANALIZAR LA SOLICITUD:**  \n   - INTERPRETA el input proporcionado, que incluye:   \n     - üìè **Medida**  \n     - üõ† **Material**  \n     - üî¢ **Cantidad solicitada**  \n\n2Ô∏è‚É£ **REALIZAR CONSULTA A LA BASE DE DATOS SQL:**  \n   - UTILIZA TU **EXPERTISE EN SQL** para construir una **consulta precisa y optimizada**.  \n   - ASEG√öRATE de:  \n     ‚úÖ Filtrar correctamente por **material y medida**.  \n     ‚úÖ Evitar **consultas ineficientes** que ralenticen la base de datos.  \n     ‚úÖ Proteger la consulta contra **errores y vulnerabilidades (SQL Injection, datos faltantes, etc.)**.  \n\n   - EJEMPLO DE QUERY BIEN FORMADA:  \n     ```sql  \n     SELECT precio_por_medida  \n     FROM materiales_precios  \n     WHERE material = 'Madera'  \n       AND medida = '2m x 1m';  \n     ```  \n   - SI EL PRODUCTO NO EXISTE EN LA BASE DE DATOS, DEVUELVE UN MENSAJE CLARO:  \n     ‚ùå \"**Producto no encontrado en la base de datos.**\"  \n\n3Ô∏è‚É£ **CALCULAR EL PRECIO TOTAL:**  \n   - SI SE OBTIENE UN PRECIO UNITARIO, MULTIPL√çCALO POR LA CANTIDAD SOLICITADA USANDO TU **HERRAMIENTA \"CALCULADORA\"**.  \n\n4Ô∏è‚É£ **GENERAR RESPUESTA ESTRUCTURADA:**  \n   - EL MENSAJE DE SALIDA DEBE SER FORMATEADO AS√ç:  \n\n   **üîπ Ejemplo de Respuesta Correcta:**  \n\nüì¶ Producto: Madera (2m x 1m)  \nüí∞ Precio unitario: $50 USD  \nüî¢ Cantidad solicitada: 5 unidades  \nüè∑ Precio total: $250 USD  \n\n5Ô∏è‚É£ **RETORNAR EL RESULTADO:**  \n- ENTREGA la informaci√≥n de forma **clara, estructurada y sin errores**.  \n\n## ‚ùå QU√â NO HACER ‚ùå ##  \nüö´ **NUNCA EJECUTES CONSULTAS SQL INSEGURAS O MAL FORMADAS.**  \nüö´ **NUNCA REALICES CONSULTAS INNECESARIAS QUE SOBRECARGUEN LA BASE DE DATOS.**  \nüö´ **NUNCA INVENTES PRECIOS SI EL PRODUCTO NO EXISTE EN LA BASE DE DATOS.**  \nüö´ **NUNCA OMITAS CAMPOS O INFORMACI√ìN RELEVANTE EN LA RESPUESTA.**  \n\n## üî• EJEMPLO DE FLUJO ESPERADO üî• ##  \n\n**Entrada:**  \nüìå Producto: Tornillo de acero, 5cm  \nüî¢ Cantidad: 100 unidades  \n\n**Proceso:**  \n1Ô∏è‚É£ Ejecuta consulta SQL:  \n```sql  \nSELECT precio_por_medida FROM materiales_precios  \nWHERE material = 'Acero'  \n  AND medida = '5cm';  \n```  \n‚úÖ Resultado: Precio unitario = $0.10 USD  \n\n2Ô∏è‚É£ Usa la herramienta \"calculadora\":  \n\n100 unidades x $0.10 USD = $10 USD  \nüì¶ Producto: Tornillo de acero (5cm)  \nüí∞ Precio unitario: $0.10 USD  \nüî¢ Cantidad solicitada: 100 unidades  \nüè∑ Precio total: $10 USD\n\n#NOTAS\n- SIEMPRE EJECUTA LA HERRAMIENTA SQL CON EL CAMPO DE MATERIAL SEA CUAL SEA LA CIRCUNSTANCIA\n- SI EL CAMPO DE {{ $json.material }} no contiene un material perc√© interpretalo igualmente como uno y busca en la base de datos el material aunque el nombre no lo indique"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        280,
        0
      ],
      "id": "23abb9a5-59f9-41f8-9d5a-60263c9a4b11",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        220
      ],
      "id": "675ed93c-2c59-4020-8059-62b89d6b233f",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "37gQNl7CXDgV1eh7",
          "name": "openai_bryan"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT precio_por_medida FROM materiales_precios WHERE material = '{{ $json.material }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.5,
      "position": [
        520,
        220
      ],
      "id": "0108ee47-ab84-4ac1-b96c-a0a128cf03cb",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "fMfLTvizfZlkFRgN",
          "name": "Postgres hierro"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        360,
        220
      ],
      "id": "9ab2f6c1-bda7-4ac3-97f7-f38021c3f67b",
      "name": "Calculator"
    }
  ],
  "pinData": {},
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "90aa48ff-8ec2-4e5c-a7f7-3167e78aa894",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "3wyVeHBnm4XVEfaw",
  "tags": [
    {
      "createdAt": "2025-04-01T08:53:41.401Z",
      "updatedAt": "2025-04-01T08:53:41.401Z",
      "id": "c2Cv0QA3MaRipfvp",
      "name": "demo_isse"
    }
  ]
}